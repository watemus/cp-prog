//
// Created by watemus on 01.08.2020.
//

/*
 %=%=%+*++%=%@@###@###@@%%%%======++++++=======%%%%====%%%%%%@@@@@@@%%@@%=*--:+%@###########%%%@@+=#######@##
%%+%++%=%%=@@##@#@#@#@@@@%%%%======+======+============%%%%%@@@@@@@####@@%%=%@##########@##*@=%@==@####@##@@
=%=*=%=@%%@%##@#%@#@#@#@@%%=%===========+++==============%%%%@@@@@@########@##########@####%%%%===%%%##@##@#
@+===@=%@%@@@##@#%##@#%#@@%%==========++++==========%%=%%%%%@@@@@@@################@##@##@##@%+:-:==+=@##@##
%+%%+@@=@@%@@@#@##%#@##%@%@=%=====================%%%%%%%%%%@@@@@@@@@@###############@##@##@#@%==++@%%#@##@#
%+%@+@@%@@%@#@#@@#%##@#%@%@=%=%===========%===%%=%%%%%%@@@@@@####@@@@@@@@#######@##@##@##@##@@@%@@@@#@@@@@@#
%=%%=@@%@@%@@@#@@@%#@@#@#%@=%%%%%===========%=%=%%%%%@@@@######@#################@@#@@#@@@@@@@@%@@@##@##@##@
%@@=%@%@@%@@%##%@%@#@#@#@@%@%%%%%========%%%====%%@@@@@##############@###########@@@%@@@@#@@#@@#@###@##@##@#
%@@%@@%@@@@@%#@@@=@@#@@@@%%%@%%%%%%%==%%%%====%@@@@#@@@@@##########################@#@%@@@##@##@##@@@%@@%@@%
@@%@@=@@%#@%@%@#%@@@@@@@%@%@%%%%%%%%%%%====%%%@@@@@%%%%%%@@########################@@#@%%@%@@@@@@@@@@@@@@@@%
@%@@%%@%@#%@@%@%@@@@@@@%%%%@@@@%%%%%%====%@@##@%@@################@@%%@@#@@@@@@####@@@@%@%%%@%@@@@@%@@@@@%@@
@%@%@@%@@%@@%@%@@@%@@@%%%%@@@@@@%%%%%%===@@##@@@@############=%@#@@##########@@@@%@@@@@@@@%%%@%%@@@@@@@#@#@@
@#@%@@@@%@@%@%@%@%%%%%%%@@@@@@@@%%%%%===@#########@##@%%@####@%@####@####################@%===%%%%@%@@%@@@@@
#@%@@%@%%@%@%@@@%@===+====%@@@@%%%%====@#########%%%=++++===%@@#####@@@@%%%%%@####@#######@======%%%%%%@@%@@
@%#@@@%@@%@%@%@%%%=+*--:*+=%@@%%%%==+++@########%@%=*+:-------*+++=++***::*+==%###########@=====%=%%%%%%@@%%
%@@%#@@@%@%@%%%%%==+:-::+=%%%%%%%==+++*%########%@=*+:-.........-......----:*+=%@###########%======+***+%=%%
@@%@%@@%@%@%%%%%@%%%=+=%%@@@%%%===++**+@########%%+:*-....................--:*=%@@###########=++===*+===++++
@%@%@@@@@%%%%=%@@@@@@%@@@#@%@%===++**:=#########%@**:-....................---:+%@%############+++==*+=%====+
%@%@@%%@%%%%%@%%@@@%@@%@@@@%%%%=++**:::#########%#+*-........ ............---:+@%%###########@**++==*****+++
@%@%%%%%%%%@%@@%%@@@@@@@@@@%%%==+**::--:########@%+*--...................----:+@=%###########=+*+*:**:...-**
%%%%=%%%=@@%%%%%%%%@@@@@%%%====++*::---#########@%+:--...................--:***+@@##########@+::::**:+**+=+=
@%%%===%%%%%%%%%%%%%%@%===+*+*+++*::--=#########%+=%===+:-............-:*=%%@@@%==@########@%+::*****=:.--:=
%%%%=++=%%%%%%%==%%%%%%=+*:-::****::-.+######@%#%==%=+++=@@%+:-....-+%%=+***++==%%@#++#######%-::***+:-::*::
%%%=%%%%=======%%==%%%==+*::::***:::-..#@####@+@%+++%#++%===+++:..:+++%++%%+#@=+=%@%*:%#######::**++=*-::+++
%==%%==========%%%%=%%%==+*******::--..:%#####:=%*:::+++**::----..-*:---:*+=+*::+=#=*:#####*---::***++:-:*+=
=%%=========+=====%%%=%%%%=+=++**::--..*@#####++@+:------.....--..-*:-..-------:+=#%**###@:.---::***+++:-***
%%%=====+======+===%%%%=%%%==++**::--..*######%+@+*:-........---..-**-......--:*+=#@:+####:.---::***+++**:*+
==+++++++++++====+==%%%======+++*::--...%#@###=*@=+:--......-:-....:**-.....--*+==#@+#####=..--::******:**:*
+++++++++++++++======%%====+=+++**:--...:@%@#####%=*:--...-::--....-::*:-----:*+==########@.---::::::::--:::
+++++++++++++++++++=========+*++**::--....@######@=+*:------:++++***+*:*:::::*+++%########*.---::::---....-:
+++++++**::*+++::**+===%==+*::::***:---...-#######%+*:::*=%%%@@%@=@@@@##@%*::***+@######=-..--:**+++++-....-
+++++++*-:*++*+**+**+=+==+*:..-:*::::--....-=######%+*:*%@%+***::-:*+===%@=::**+@####*....---:****:::***--.-
%%=+++++++**+*****::*+++==+++******:::--....  .=@+=#%+++=+:-:::-::::***::+==++%@%+:. .......-:::-..-:::+=*:-
%%%=++++++***:::---:****+====++++***::---...    -+%+###@%*---::---::::---+@#@@##=*..........-::--:-:***+=+**
@@%@%=+++***:::---.---:*************:::---...    .=++###@%*----:**:----:=@######@+..........-*+::**+++++++**
@##%%=+++*:::--............:***:****:::----..    -+=+#####@+-.......--:+@########=-..--*+*:-:+++***+++++=++*
####@@%=*+***:--..........*+=++*+++***:::--:**--%%+==######@=*::::::**=@##@##@@@@=%@@%%%%@%==++++:::::*+%%+:
###@@%+*.:+**:---....--:***+++**=++++**::*+=%=%=%====#@@@##@@@########@@@@@@@@@%%%%@%%===%%%%==*:::::-:=%%+:
#@%%%%=======++:::----::**++**+==+==+=+++++=%+++=%=+%%%%%@@@@@########@@%%==%%%%%%=====++=++::::::----:%%%*:
#@@@@%%%%@%%%%%+++*+===+*::::*:::::***+===+==++++=++========%%@@###@@@%%==++===%%%%==++++++*:::-------+%%+-:
@@@@@@%@%%%@@@@%%@@%%%%%.▮▮▮▮▮▮▮▮▮▮▮▮▮.++++++****+++++++++++==%%@@@%%===++++=====+=%*--::::::-----...:%%%**-
#@@@@@@@%%%@@%@%%@@%%%%%.▮▮ :+***++ ▮▮.**++++******++*******+*=======++*****:*+**:***:-:::::-----.--*%%%+-..
%%%%%%@@@@%%%%%%%%%@@@%%.▮▮ .-+**+* ▮▮.:*:▮▮▮***: ▮▮▮:**- ▮▮▮▮▮▮ *++++* ▮▮▮▮▮▮▮▮.-:::.▮▮▮▮▮▮▮.**++++%%%-....
@%=@@@%%%@%%%@@%%%@@%%=%.▮▮ --+***: ▮▮.:*:▮▮▮:**▮▮▮▮▮:*-   :** ▮▮ *+++*▮▮▮-:: ▮▮.::: ▮▮.::* ▮▮ ::-:%%=-...--
%=%%@@#%=@%%%@@@%%@@%%%%.▮▮ .*++**: ▮▮.::-▮▮▮*:▮▮ ▮▮▮**++++    ▮▮.**:*: ▮▮-:: ▮▮.::-:::-...  ▮ --*%%+-..----
@%+%%%@@=%#@@%%@%%@%%@@@.▮▮ :****** ▮▮.++:▮▮▮:▮▮--▮▮▮**+***▮▮▮▮▮▮----:- ▮ ::- ▮▮.:::. ▮▮▮▮▮▮▮▮ :=%=:-..-.---
%@@=+=%@@@#@%%@%%=:.+%@@.▮▮ **+==%+ ▮▮-++:▮▮▮▮▮:+-▮▮▮**:--:**:-▮▮▮.--.▮▮ .--- ▮▮.:*: ▮▮-**+- ▮ %=:-..... ..-
@%@#@@@@%%==%@@%%%@=++==.▮▮.@@@%%=+ ▮▮.++:▮▮▮ *++-▮▮▮:*-       ▮▮ . ▮▮▮▮▮▮▮▮▮▮▮▮▮▮.: ▮▮▮▮▮▮▮▮▮ --....-------
+@%=%%%%%@@%%%%%%%%@=++*::::=%@==%%:--:***---*+++*---:::::▮▮▮▮▮▮▮.. ▮▮▮..       ▮▮ ...    ..   ......----:::
+==%%==%+++=%%%=%%%%====%%%%%%%%@@@@%+***::::***:::::***::::::--.... ▮▮.-....  ▮▮▮ ... .       .....------::
==@@==%@%%%=+%%%=%@%%%%@@@@@@@@@@@@@@=::::::::::::::::::::::::------.........      ......    ....  ...---:::
=%%=%@%%%%%==%%%%%%%=%@@#@%%%%=@####@%****:::::::::::::::::::::::------...               ........-----.
@==%==%%==%@@%==%%%=%==+%@@@@%@@@@++**::::::::::::::::::::::::::::::---.      .... .           ..--.---..-::
%%%==@=++=%%@@@@%%=+::--:*%%%%@%=%%=::*******::::::::::::::--:::::::::..................             . . ...
 */
#ifdef LOCAL
#define _GLIBCXX_DEBUG
#endif

#include <bits/stdc++.h>

using namespace std;

#define ALL(a) a.begin(), a.end()
#define RALL(a) a.rbegin(), a.rend()
#define FF first
#define SS second

using ll = long long;
using ld = long double;

//#define int ll

template<typename T>
using vec = std::vector<T>;

template<typename T>
using uset = std::unordered_set<T>;

template<typename T1, typename T2>
using umap = std::unordered_map<T1, T2>;

constexpr ll INFL = 1'000'000'000'000'000'228;
constexpr int INFI = 1'000'000'228;
const ld PI = acos(-1);
std::mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

vec<pair<int, int>> DD = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};

#ifdef LOCAL
#else
#endif

vec<vec<int>> g, rg;

inline int add_var() {
  int var = g.size();
  g.push_back({});
  g.push_back({});
  rg.push_back({});
  rg.push_back({});
  return var;
}

inline void add_expr(int u, int v) {
  g[u ^ 1].push_back(v);
  g[v ^ 1].push_back(u);
  rg[u].push_back(v ^ 1);
  rg[v].push_back(u ^ 1);
}

vec<int> solve_2sat() {
  int n = g.size();
  vec<int> solution, comp(n);
  solution.reserve(n);
  function<void(int)> calc_top_sort = [&](int v) {
    comp[v] = 1;
    for (auto u : g[v]) {
      if (!comp[u])
        calc_top_sort(u);
    }
    solution.push_back(v);
  };
  for (int i = 0; i < n; i++) {
    if (!comp[i])
      calc_top_sort(i);
  }
  comp.assign(n, -1);
  reverse(ALL(solution));
  int col = 0;
  function<void(int, int)> calc_cond = [&](int v, int cur_col) {
    comp[v] = cur_col;
    for (auto u : rg[v]) {
      if (comp[u] == -1) {
        calc_cond(u, cur_col);
      }
    }
  };
  for (auto v : solution) {
    if (comp[v] == -1) {
      calc_cond(v, col);
      col++;
    }
  }
  solution.assign(n, 0);
  for (int i = 0; i < n; i += 2) {
    if (comp[i] == comp[i + 1]) {
      cout << "-1\n";
      exit(0);
    } else if (comp[i] > comp[i + 1]) {
      solution[i] = 1;
    } else {
      solution[i + 1] = 1;
    }
  }
  return solution;
}

void run() {
  int num_wish, num_stations, max_power, num_same;
  cin >> num_wish >> num_stations >> max_power >> num_same;
  vec<int> radios_vars(num_stations);
  for (int i = 0; i < num_stations; i++) {
    radios_vars[i] = add_var();
  }
  for (int i = 0; i < num_wish; i++) {
    int u, v;
    cin >> u >> v;
    u--, v--;
    add_expr(radios_vars[u], radios_vars[v]);
  }
  vec<int> power_vars(max_power + 1);
  for (int i = 0; i <= max_power; i++) {
    power_vars[i] = add_var();
    if (i > 0) {
      add_expr(power_vars[i - 1], power_vars[i] ^ 1);
    }
  }
  for (int i = 0; i < num_stations; i++) {
    int lb, rb;
    cin >> lb >> rb;
    lb--, rb--;
    add_expr(radios_vars[i] ^ 1, power_vars[lb]);
    add_expr(radios_vars[i] ^ 1, power_vars[rb + 1] ^ 1);
  }
  for (int i = 0; i < num_same; i++) {
    int u, v;
    cin >> u >> v;
    u--, v--;
    add_expr(radios_vars[u] ^ 1, radios_vars[v] ^ 1);
  }
  auto solution = solve_2sat();
  int ans_power = 0;
  for (int i = 0; i <= max_power; i++) {
    if (solution[power_vars[i]]) {
      ans_power = i + 1;
    }
  }
  vec<int> ans_stations;
  for (int i = 0; i < num_stations; i++) {
    if (solution[radios_vars[i]]) {
      ans_stations.push_back(i + 1);
    }
  }
  cout << ans_stations.size() << ' ' << ans_power << '\n';
  for (auto station : ans_stations) {
    cout << station << ' ';
  }
  cout << '\n';
}

signed main() {
#ifdef LOCAL
  std::freopen("input.txt", "r", stdin);
#else
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
#endif
  int t = 1;
  //cin >> t;
  while (t--) {
    run();
  }
  return 0;
}



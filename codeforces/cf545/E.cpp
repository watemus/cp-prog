//
// Created by watemus on 02.08.2020.
//

/*
 %=%=%+*++%=%@@###@###@@%%%%======++++++=======%%%%====%%%%%%@@@@@@@%%@@%=*--:+%@###########%%%@@+=#######@##
%%+%++%=%%=@@##@#@#@#@@@@%%%%======+======+============%%%%%@@@@@@@####@@%%=%@##########@##*@=%@==@####@##@@
=%=*=%=@%%@%##@#%@#@#@#@@%%=%===========+++==============%%%%@@@@@@########@##########@####%%%%===%%%##@##@#
@+===@=%@%@@@##@#%##@#%#@@%%==========++++==========%%=%%%%%@@@@@@@################@##@##@##@%+:-:==+=@##@##
%+%%+@@=@@%@@@#@##%#@##%@%@=%=====================%%%%%%%%%%@@@@@@@@@@###############@##@##@#@%==++@%%#@##@#
%+%@+@@%@@%@#@#@@#%##@#%@%@=%=%===========%===%%=%%%%%%@@@@@@####@@@@@@@@#######@##@##@##@##@@@%@@@@#@@@@@@#
%=%%=@@%@@%@@@#@@@%#@@#@#%@=%%%%%===========%=%=%%%%%@@@@######@#################@@#@@#@@@@@@@@%@@@##@##@##@
%@@=%@%@@%@@%##%@%@#@#@#@@%@%%%%%========%%%====%%@@@@@##############@###########@@@%@@@@#@@#@@#@###@##@##@#
%@@%@@%@@@@@%#@@@=@@#@@@@%%%@%%%%%%%==%%%%====%@@@@#@@@@@##########################@#@%@@@##@##@##@@@%@@%@@%
@@%@@=@@%#@%@%@#%@@@@@@@%@%@%%%%%%%%%%%====%%%@@@@@%%%%%%@@########################@@#@%%@%@@@@@@@@@@@@@@@@%
@%@@%%@%@#%@@%@%@@@@@@@%%%%@@@@%%%%%%====%@@##@%@@################@@%%@@#@@@@@@####@@@@%@%%%@%@@@@@%@@@@@%@@
@%@%@@%@@%@@%@%@@@%@@@%%%%@@@@@@%%%%%%===@@##@@@@############=%@#@@##########@@@@%@@@@@@@@%%%@%%@@@@@@@#@#@@
@#@%@@@@%@@%@%@%@%%%%%%%@@@@@@@@%%%%%===@#########@##@%%@####@%@####@####################@%===%%%%@%@@%@@@@@
#@%@@%@%%@%@%@@@%@===+====%@@@@%%%%====@#########%%%=++++===%@@#####@@@@%%%%%@####@#######@======%%%%%%@@%@@
@%#@@@%@@%@%@%@%%%=+*--:*+=%@@%%%%==+++@########%@%=*+:-------*+++=++***::*+==%###########@=====%=%%%%%%@@%%
%@@%#@@@%@%@%%%%%==+:-::+=%%%%%%%==+++*%########%@=*+:-.........-......----:*+=%@###########%======+***+%=%%
@@%@%@@%@%@%%%%%@%%%=+=%%@@@%%%===++**+@########%%+:*-....................--:*=%@@###########=++===*+===++++
@%@%@@@@@%%%%=%@@@@@@%@@@#@%@%===++**:=#########%@**:-....................---:+%@%############+++==*+=%====+
%@%@@%%@%%%%%@%%@@@%@@%@@@@%%%%=++**:::#########%#+*-........ ............---:+@%%###########@**++==*****+++
@%@%%%%%%%%@%@@%%@@@@@@@@@@%%%==+**::--:########@%+*--...................----:+@=%###########=+*+*:**:...-**
%%%%=%%%=@@%%%%%%%%@@@@@%%%====++*::---#########@%+:--...................--:***+@@##########@+::::**:+**+=+=
@%%%===%%%%%%%%%%%%%%@%===+*+*+++*::--=#########%+=%===+:-............-:*=%%@@@%==@########@%+::*****=:.--:=
%%%%=++=%%%%%%%==%%%%%%=+*:-::****::-.+######@%#%==%=+++=@@%+:-....-+%%=+***++==%%@#++#######%-::***+:-::*::
%%%=%%%%=======%%==%%%==+*::::***:::-..#@####@+@%+++%#++%===+++:..:+++%++%%+#@=+=%@%*:%#######::**++=*-::+++
%==%%==========%%%%=%%%==+*******::--..:%#####:=%*:::+++**::----..-*:---:*+=+*::+=#=*:#####*---::***++:-:*+=
=%%=========+=====%%%=%%%%=+=++**::--..*@#####++@+:------.....--..-*:-..-------:+=#%**###@:.---::***+++:-***
%%%=====+======+===%%%%=%%%==++**::--..*######%+@+*:-........---..-**-......--:*+=#@:+####:.---::***+++**:*+
==+++++++++++====+==%%%======+++*::--...%#@###=*@=+:--......-:-....:**-.....--*+==#@+#####=..--::******:**:*
+++++++++++++++======%%====+=+++**:--...:@%@#####%=*:--...-::--....-::*:-----:*+==########@.---::::::::--:::
+++++++++++++++++++=========+*++**::--....@######@=+*:------:++++***+*:*:::::*+++%########*.---::::---....-:
+++++++**::*+++::**+===%==+*::::***:---...-#######%+*:::*=%%%@@%@=@@@@##@%*::***+@######=-..--:**+++++-....-
+++++++*-:*++*+**+**+=+==+*:..-:*::::--....-=######%+*:*%@%+***::-:*+===%@=::**+@####*....---:****:::***--.-
%%=+++++++**+*****::*+++==+++******:::--....  .=@+=#%+++=+:-:::-::::***::+==++%@%+:. .......-:::-..-:::+=*:-
%%%=++++++***:::---:****+====++++***::---...    -+%+###@%*---::---::::---+@#@@##=*..........-::--:-:***+=+**
@@%@%=+++***:::---.---:*************:::---...    .=++###@%*----:**:----:=@######@+..........-*+::**+++++++**
@##%%=+++*:::--............:***:****:::----..    -+=+#####@+-.......--:+@########=-..--*+*:-:+++***+++++=++*
####@@%=*+***:--..........*+=++*+++***:::--:**--%%+==######@=*::::::**=@##@##@@@@=%@@%%%%@%==++++:::::*+%%+:
###@@%+*.:+**:---....--:***+++**=++++**::*+=%=%=%====#@@@##@@@########@@@@@@@@@%%%%@%%===%%%%==*:::::-:=%%+:
#@%%%%=======++:::----::**++**+==+==+=+++++=%+++=%=+%%%%%@@@@@########@@%%==%%%%%%=====++=++::::::----:%%%*:
#@@@@%%%%@%%%%%+++*+===+*::::*:::::***+===+==++++=++========%%@@###@@@%%==++===%%%%==++++++*:::-------+%%+-:
@@@@@@%@%%%@@@@%%@@%%%%%.▮▮▮▮▮▮▮▮▮▮▮▮▮.++++++****+++++++++++==%%@@@%%===++++=====+=%*--::::::-----...:%%%**-
#@@@@@@@%%%@@%@%%@@%%%%%.▮▮ :+***++ ▮▮.**++++******++*******+*=======++*****:*+**:***:-:::::-----.--*%%%+-..
%%%%%%@@@@%%%%%%%%%@@@%%.▮▮ .-+**+* ▮▮.:*:▮▮▮***: ▮▮▮:**- ▮▮▮▮▮▮ *++++* ▮▮▮▮▮▮▮▮.-:::.▮▮▮▮▮▮▮.**++++%%%-....
@%=@@@%%%@%%%@@%%%@@%%=%.▮▮ --+***: ▮▮.:*:▮▮▮:**▮▮▮▮▮:*-   :** ▮▮ *+++*▮▮▮-:: ▮▮.::: ▮▮.::* ▮▮ ::-:%%=-...--
%=%%@@#%=@%%%@@@%%@@%%%%.▮▮ .*++**: ▮▮.::-▮▮▮*:▮▮ ▮▮▮**++++    ▮▮.**:*: ▮▮-:: ▮▮.::-:::-...  ▮ --*%%+-..----
@%+%%%@@=%#@@%%@%%@%%@@@.▮▮ :****** ▮▮.++:▮▮▮:▮▮--▮▮▮**+***▮▮▮▮▮▮----:- ▮ ::- ▮▮.:::. ▮▮▮▮▮▮▮▮ :=%=:-..-.---
%@@=+=%@@@#@%%@%%=:.+%@@.▮▮ **+==%+ ▮▮-++:▮▮▮▮▮:+-▮▮▮**:--:**:-▮▮▮.--.▮▮ .--- ▮▮.:*: ▮▮-**+- ▮ %=:-..... ..-
@%@#@@@@%%==%@@%%%@=++==.▮▮.@@@%%=+ ▮▮.++:▮▮▮ *++-▮▮▮:*-       ▮▮ . ▮▮▮▮▮▮▮▮▮▮▮▮▮▮.: ▮▮▮▮▮▮▮▮▮ --....-------
+@%=%%%%%@@%%%%%%%%@=++*::::=%@==%%:--:***---*+++*---:::::▮▮▮▮▮▮▮.. ▮▮▮..       ▮▮ ...    ..   ......----:::
+==%%==%+++=%%%=%%%%====%%%%%%%%@@@@%+***::::***:::::***::::::--.... ▮▮.-....  ▮▮▮ ... .       .....------::
==@@==%@%%%=+%%%=%@%%%%@@@@@@@@@@@@@@=::::::::::::::::::::::::------.........      ......    ....  ...---:::
=%%=%@%%%%%==%%%%%%%=%@@#@%%%%=@####@%****:::::::::::::::::::::::------...               ........-----.
@==%==%%==%@@%==%%%=%==+%@@@@%@@@@++**::::::::::::::::::::::::::::::---.      .... .           ..--.---..-::
%%%==@=++=%%@@@@%%=+::--:*%%%%@%=%%=::*******::::::::::::::--:::::::::..................             . . ...
 */
#ifdef LOCAL
#define _GLIBCXX_DEBUG
#endif

#include <bits/stdc++.h>

using namespace std;

#define ALL(a) a.begin(), a.end()
#define RALL(a) a.rbegin(), a.rend()
#define FF first
#define SS second

using ll = long long;
using ld = long double;

#define int ll

template<typename T>
using vec = std::vector<T>;

template<typename T>
using uset = std::unordered_set<T>;

template<typename T1, typename T2>
using umap = std::unordered_map<T1, T2>;

constexpr ll INFL = 1'000'000'000'000'000'228;
constexpr int INFI = 1'000'000'228;
const ld PI = acos(-1);
std::mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

vec<pair<int, int>> DD = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};

#ifdef LOCAL
#else
#endif

struct Pt {
  int x, y;
};

Pt operator+(Pt a, Pt b) {
  return {a.x - b.x, a.y - b.y};
}

Pt operator-(Pt a, Pt b) {
  return {a.x - b.x, a.y - b.y};
}

int operator*(Pt a, Pt b) {
  return a.x * b.y - a.y * b.x;
}

void run() {
  int n, m;
  cin >> n >> m;
  vec<Pt> hull {{0, 0}};
  int k = 0, b = 0;
  for (int iter = 0; iter < m; iter++) {
    int q;
    cin >> q;
    if (q == 1) {
      int add;
      cin >> add;
      hull.assign(1, {0, 0});
      n += add;
      k = b = 0;
    } else if (q == 2) {
      int add;
      cin >> add;
      Pt nw = {n, k * n + b};
      n += add;
      if (k * hull.back().x + b - hull.back().y == k * nw.x + b - nw.y) {
        cout << hull.back().x + 1 << ' ' << k * hull.back().x + b - hull.back().y << '\n';
        continue;
      }
      while (hull.size() > 1) {
        Pt prv = hull.back();
        Pt prvv = hull[hull.size() - 2];
        prv.y = k * prv.x + b - prv.y;
        prvv.y = k * prvv.x + b - prvv.y;
        Pt nww = nw;
        nww.y = 0;
        if ((prv - prvv) * (nww - prv) <= 0) {
          hull.pop_back();
        } else {
          break;
        }
      }
      hull.push_back(nw);
    } else {
      int cb, ck;
      cin >> cb >> ck;
      k += ck;
      b += cb;
      while (hull.size() > 1) {
        Pt prv = hull.back();
        Pt prvv = hull[hull.size() - 2];
        prv.y = k * prv.x + b - prv.y;
        prvv.y = k * prvv.x + b - prvv.y;
        if (prv.y >= prvv.y) {
          hull.pop_back();
        } else {
          break;
        }
      }
    }
    cout << hull.back().x + 1 << ' ' << k * hull.back().x + b - hull.back().y << '\n';
  }
}

signed main() {
#ifdef LOCAL
  std::freopen("input.txt", "r", stdin);
#else
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
#endif
  int t = 1;
  //cin >> t;
  while (t--) {
    run();
  }
  return 0;
}


